// Generated by Apple Swift version 5.0 effective-4.2 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import IndoorAtlas;
@import LJSwift;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <LjIndoor/LjIndoor.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LjIndoor",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSBundle;
@class NSCoder;

SWIFT_CLASS_NAMED("AboutViewController")
@interface AboutViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class DetectLocationViewModel;

SWIFT_CLASS_NAMED("DetectLocationViewController")
@interface DetectLocationViewController : UIViewController
@property (nonatomic, strong) DetectLocationViewModel * _Null_unspecified detectLocationViewModel;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class UIScrollView;
@class UIView;

@interface DetectLocationViewController (SWIFT_EXTENSION(LjIndoor)) <UIScrollViewDelegate>
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
@end

@class DestinationModel;
@class FloorReferenceFeed;
@class NSArray;

SWIFT_CLASS("_TtC8LjIndoor23DetectLocationViewModel")
@interface DetectLocationViewModel : NSObject
- (nonnull instancetype)initWithDestinationModel:(DestinationModel * _Nonnull)destinationModel floorFeed:(FloorReferenceFeed * _Nonnull)floorFeed mapoverlays:(NSArray * _Nullable)mapoverlays shouldMapQl:(BOOL)shouldMapQl directQl:(NSString * _Nullable)directQl isVenueIDPresent:(BOOL)isVenueIDPresent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// (DirectionsView)
typedef SWIFT_ENUM(NSInteger, Directions, closed) {
  DirectionsTurnLeft = 0,
  DirectionsTurnRight = 1,
  DirectionsTurnSlightLeft = 2,
  DirectionsTurnSlightRight = 3,
  DirectionsTurnImmediateLeft = 4,
  DirectionsTurnImmediateRight = 5,
  DirectionsGoStraight = 6,
};

@class UIButton;

/// This class serves the purpose of navigating users by showing them upcoming direction (left turn, right turn, slight left turn, slight right turn)
SWIFT_CLASS("_TtC8LjIndoor14DirectionsView")
@interface DirectionsView : UIView
/// Use this function to initialize DirectionView object.
/// \param withFrame frame to be used for DirectionView
///
/// \param directionsText text for updated direction
///
/// \param distanceLeft exact distance in feet for which DirectionView is being shown
///
/// \param crossButtonClosure a closure for cross button
///
///
/// returns:
/// DirectionView
- (DirectionsView * _Nullable)initDirectionsViewWithFrame:(CGRect)withFrame directionsText:(NSString * _Nullable)directionsText direction:(enum Directions)direction distanceLeft:(NSString * _Nullable)distanceLeft crossButtonClosure:(void (^ _Nonnull)(UIButton * _Nonnull))crossButtonClosure SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)updateDistanceWithDist:(NSString * _Nullable)dist;
- (void)updateMessageWithMessage:(NSString * _Nullable)message distance:(NSString * _Nullable)distance;
- (void)playSoundFile:(NSString * _Nullable)soundFileName format:(NSString * _Nonnull)format;
/// Use this function to remove DirectionView from its superview.
- (void)removeDirectionView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ElevatorMessageCardProperty, closed) {
  ElevatorMessageCardPropertyWithContinueButton = 0,
  ElevatorMessageCardPropertyWithBackAndNextButton = 1,
};

enum UserAction : NSInteger;
@class WKWebView;
@class WKNavigation;

SWIFT_CLASS_NAMED("ElevatorMessageCardView")
@interface ElevatorMessageCardView : UIView <WKNavigationDelegate>
+ (ElevatorMessageCardView * _Nullable)initElevatorMessageCardWithFrame:(CGRect)frame info:(NSDictionary * _Nullable)info property:(enum ElevatorMessageCardProperty)property userAction:(void (^ _Nonnull)(enum UserAction))userAction SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)centerFloorTranistionAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("ElevatorPopUpView")
@interface ElevatorPopUpView : UIView
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified pressHereButton;
@property (nonatomic, copy) void (^ _Null_unspecified callBackClosure)(enum UserAction);
- (ElevatorPopUpView * _Nullable)initElevatorPopUpViewWithFrame:(CGRect)frame info:(NSDictionary * _Nullable)info callback:(void (^ _Nonnull)(enum UserAction))callback SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (IBAction)pressHereButtonAction:(id _Nonnull)sender;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UITableView;
@class UITableViewCell;

SWIFT_CLASS_NAMED("EventsViewController")
@interface EventsViewController : UIViewController <CustomCellProtocol, CustomAlertViewProtocol, UITableViewDataSource, UITableViewDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)detailsButtonTapped:(UIButton * _Null_unspecified)button tagValue:(NSInteger)tagValue showDetails:(BOOL)value;
- (void)upArrowTapped:(UIButton * _Nonnull)button;
- (void)mapITTapped:(UIButton * _Nonnull)button;
- (void)selectTapped:(UIButton * _Null_unspecified)button SWIFT_AVAILABILITY(ios,introduced=2.0);
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("FindMeControllerNewVersion")
@interface FindMeControllerNewVersion : FindMeViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ImportantTipsView")
@interface ImportantTipsView : UIView
- (void)awakeFromNib;
- (ImportantTipsView * _Nullable)initWithTipsWithFrame:(CGRect)frame firstBulletText:(NSString * _Nonnull)firstBulletText secondBulletText:(NSString * _Nonnull)secondBulletText thirdBulletText:(NSString * _Nonnull)thirdBulletText okAction:(void (^ _Nonnull)(void))okAction SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocationManager;
@class CLBeacon;
@class CLBeaconRegion;
@class CLRegion;

SWIFT_CLASS_NAMED("LJBeaconServiceSwift")
@interface LJBeaconServiceSwift : NSObject <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager rangingBeaconsDidFailForRegion:(CLBeaconRegion * _Nonnull)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class IAFloorPlan;
@class UIImage;
@class MapFloorGeofence;
@class SessionData_Simulation;
@class IALocation;
@class FloorReference;
@class BeaconModel;

SWIFT_CLASS_NAMED("LJFusionServiceSwift")
@interface LJFusionServiceSwift : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LJFusionServiceSwift * _Nonnull ljFusionServiceSwift;)
+ (LJFusionServiceSwift * _Nonnull)ljFusionServiceSwift SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) CGPoint blueDotPoint;
@property (nonatomic, strong) IAFloorPlan * _Nullable currentIAFloorPlan;
@property (nonatomic) NSInteger currentLJFloorPlanID;
@property (nonatomic, copy) NSString * _Nullable currentLJFloorPlanName;
@property (nonatomic, strong) UIImage * _Nullable currentLJFloorPlanImage;
@property (nonatomic, strong) UIImage * _Nullable currentLJFloorPlanBitMaskImage;
@property (nonatomic, copy) NSArray * _Nullable mapOverlaysContentArray;
@property (nonatomic, copy) void (^ _Nullable provideBlueDotObserver)(CGPoint, double);
@property (nonatomic, copy) void (^ _Nullable provideFloorPlanObserver)(IAFloorPlan * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable provideCourseDirectionObserver)(double);
@property (nonatomic, copy) void (^ _Nullable provideFloorPlanImageObserver)(UIImage * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable provideGeofenceObserver)(MapFloorGeofence * _Nonnull, BOOL);
@property (nonatomic, copy) void (^ _Nullable providePDRStateObserver)(BOOL);
@property (nonatomic) BOOL areBeaconVisible;
@property (nonatomic) BOOL isBeaconScanningServiceRunning;
@property (nonatomic, strong) SessionData_Simulation * _Nullable sessionData_Simulation;
@property (nonatomic, strong) NSArray * _Nullable floorReferenceArray;
- (BOOL)isIAFloorStablized SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isVenueIDKnown SWIFT_WARN_UNUSED_RESULT;
- (void)resetVenueDetectionTimerWithStartLocationService:(BOOL)startLocationService;
- (void)checkIfUserInsideCampus:(void (^ _Nullable)(BOOL))gpsHandOff;
- (BOOL)isLocationServiceRunning SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)getFloorConsistencyTimeStamp SWIFT_WARN_UNUSED_RESULT;
- (void)unlockFloor;
- (SessionData_Simulation * _Nullable)getSessionData_SimulationObject SWIFT_WARN_UNUSED_RESULT;
- (void)setSessionData_SimulationObjectWithSessionData_SimulationObject:(SessionData_Simulation * _Nonnull)sessionData_SimulationObject;
+ (LJFusionServiceSwift * _Nonnull)getSharedObject SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCurrentIAFloorPlanId SWIFT_WARN_UNUSED_RESULT;
- (void)authorizeCLLocationManager;
- (void)requestLocationWithFloorPlanID:(NSString * _Nonnull)floorPlanID IAFloorLevel:(NSInteger)IAFloorLevel;
- (void)disableAutomaticFloorDetection;
- (void)stopIALocationServices;
- (void)stopBeaconService;
- (BOOL)setExplicitPositionWithPoint:(CGPoint)point floorLevel:(NSInteger)floorLevel floorPlanID:(NSString * _Nullable)floorPlanID shouldConsiderCoordinates:(BOOL)shouldConsiderCoordinates SWIFT_WARN_UNUSED_RESULT;
- (void)setExplicitIALocationWithLoc:(IALocation * _Nullable)loc;
- (IALocation * _Nullable)getCurrentIALocation SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)getUserSpeed SWIFT_WARN_UNUSED_RESULT;
- (double)getHorizontalAccuracy SWIFT_WARN_UNUSED_RESULT;
- (double)getCourse SWIFT_WARN_UNUSED_RESULT;
- (double)getStableIizedCourse SWIFT_WARN_UNUSED_RESULT;
- (double)getCLCourseDirection SWIFT_WARN_UNUSED_RESULT;
- (double)getCourseDirection SWIFT_WARN_UNUSED_RESULT;
- (void)deInitIALocationManager;
- (void)resetBeaconsProperties;
- (void)saveSessionTraceId;
- (void)copySessionTraceIdToClipboard;
- (NSString * _Nullable)getSessionTraceId SWIFT_WARN_UNUSED_RESULT;
- (void)startLookingForBeaconsWithFloorReferenceArray:(NSArray<FloorReference *> * _Nonnull)floorReferenceArray;
- (NSArray<BeaconModel *> * _Nullable)returnBeaconModelForTracking SWIFT_WARN_UNUSED_RESULT;
- (void)checkForGeofenceOnLocationUpdateWithPoint:(CGPoint)point;
- (void)startIndoorAtlasAutomaticFloorDetectionWithFloorReferences:(NSArray * _Nullable)floorReferences withFloorPlanId:(NSString * _Nullable)withFloorPlanId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class IALocationManager;
@class IARegion;
@class IAHeading;
@class IAStatus;
@class CLLocation;
@class CLHeading;

SWIFT_CLASS("_TtC8LjIndoor24LJIALocationServiceSwift")
@interface LJIALocationServiceSwift : NSObject <CLLocationManagerDelegate, IALocationManagerDelegate>
- (NSString * _Nullable)getCurrentIAFloorPlanId SWIFT_WARN_UNUSED_RESULT;
- (void)indoorLocationManager:(IALocationManager * _Nonnull)manager didUpdateLocations:(NSArray * _Nonnull)locations;
- (void)indoorLocationManager:(IALocationManager * _Nonnull)manager didEnterRegion:(IARegion * _Nonnull)region;
- (void)indoorLocationManager:(IALocationManager * _Nonnull)manager didUpdateHeading:(IAHeading * _Nonnull)newHeading;
- (void)indoorLocationManager:(IALocationManager * _Nonnull)manager statusChanged:(IAStatus * _Nonnull)status;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateHeading:(CLHeading * _Nonnull)newHeading;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MapViewControllerNewVersion")
@interface MapViewControllerNewVersion : MapViewController
- (void)setCurrentBlueDotPositionWithPoint:(CGPoint)point;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MenuItemsDrawer")
@interface MenuItemsDrawer : UIView
@property (nonatomic) BOOL isMenuDrawerOpen;
- (MenuItemsDrawer * _Nullable)initMenuItemDrawerViewWithPosition:(CGPoint)withPosition shouldOpen:(BOOL)shouldOpen recenterClosure:(void (^ _Nonnull)(UIButton * _Nonnull))recenterClosure listClosure:(void (^ _Nonnull)(UIButton * _Nonnull))listClosure favoriteClosure:(void (^ _Nonnull)(UIButton * _Nonnull))favoriteClosure mapClosure:(void (^ _Nonnull)(UIButton * _Nonnull))mapClosure SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)shouldShowMenuDrawerOpenWithOpen:(BOOL)open;
- (void)closeMenuItemsDrawer;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MessageCell")
@interface MessageCell : UITableViewCell
- (void)updateMessageWithText:(NSString * _Nonnull)text;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8LjIndoor27NotificationsViewController")
@interface NotificationsViewController : UIViewController <CustomCellProtocol, UITableViewDataSource, UITableViewDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)mapITTapped:(UIButton * _Nonnull)button;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKNavigationAction;

SWIFT_CLASS_NAMED("PrivacyStmtViewController")
@interface PrivacyStmtViewController : UIViewController <WKNavigationDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS_NAMED("RatingStars")
@interface RatingStars : UIView
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class NSMutableAttributedString;

SWIFT_CLASS_NAMED("RatingView")
@interface RatingView : UIView
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified topImageView;
@property (nonatomic) NSInteger rating;
@property (nonatomic, copy) NSString * _Nullable userComment;
- (RatingView * _Nullable)initRatingsViewWithFrame:(CGRect)withFrame message:(NSMutableAttributedString * _Nonnull)message submitAction:(void (^ _Nonnull)(RatingView * _Nonnull))submitAction closeAction:(void (^ _Nonnull)(RatingView * _Nonnull))closeAction SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)setCommentBoxDelegate;
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextView;

@interface RatingView (SWIFT_EXTENSION(LjIndoor)) <UITextViewDelegate>
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end

enum SessionScreenType : NSInteger;

SWIFT_CLASS("_TtC8LjIndoor26SessionBlueDotPointerEvent")
@interface SessionBlueDotPointerEvent : NSObject
@property (nonatomic) enum SessionScreenType currentScreen_className;
@property (nonatomic, copy) NSString * _Nonnull timeStamp;
@property (nonatomic) double blueDotPointerValue;
- (nonnull instancetype)initWithCurrentScreenInAction:(enum SessionScreenType)currentScreenInAction timeStamp:(NSDate * _Nonnull)timeStamp blueDotPointerValue:(double)blueDotPointerValue OBJC_DESIGNATED_INITIALIZER;
/// This func can be used to convert a date object into a string object
/// \param date a Date object.
///
///
/// returns:
/// String, a String class object.
- (NSString * _Nonnull)getDateAsStringWithDate:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class SessionEvent;
@class SessionLocationEvent;

SWIFT_CLASS_NAMED("SessionData_Simulation")
@interface SessionData_Simulation : NSObject
/// Designated initializer to inilialize the object with json file name & session’s start time
/// \param name jsonFileName
///
/// \param startTime start time of session
///
- (nonnull instancetype)initWithJsonFileName:(NSString * _Nonnull)name startTime:(NSDate * _Nonnull)startTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithJson:(NSString * _Nonnull)json jsonFileName:(NSString * _Nonnull)jsonFileName OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getSessionDataDictionary SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SessionEvent *> * _Nullable)getAllSessionEvents SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SessionLocationEvent *> * _Nullable)getAllSessionLocationEvents SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SessionBlueDotPointerEvent *> * _Nullable)getallSessionBlueDotPointerEvents SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)getAllSessionLocationEventsJson SWIFT_WARN_UNUSED_RESULT;
- (void)loadStateVariablesWithSessionData:(NSDictionary * _Nonnull)sessionData;
/// This func can be used add session event into json file
/// \param sessionEvent event to be logged into json file.
///
- (void)addWithSessionEvent:(SessionEvent * _Nonnull)sessionEvent;
/// This func can be used add session location event into json file
/// \param sessionLocationEvent location event to be logged into json file.
///
- (void)addWithSessionLocationEvent:(SessionLocationEvent * _Nonnull)sessionLocationEvent;
/// This func can be used add session location event into json file
/// \param sessionLocationEvent location event to be logged into json file.
///
- (void)addWithSessionBlueDotPointerEvent:(SessionBlueDotPointerEvent * _Nonnull)sessionBlueDotPointerEvent;
/// Use this function to add object into Session’s Json
/// \param obj object to be added into Session’s Json
///
/// \param key key to used to set obj into Session’s Json
///
- (void)addDataIntoSessionWithObj:(id _Nonnull)obj key:(NSString * _Nonnull)key;
/// This func can be used to get the path of the session data json file
/// \param jsonFileName name of json file.
///
///
/// returns:
/// String, the path of json file.
+ (NSString * _Nullable)getSessionJsonPathWithJsonFileName:(NSString * _Nonnull)jsonFileName SWIFT_WARN_UNUSED_RESULT;
/// This func can be used to get the contents of session data JSON file
///
/// returns:
/// String, holding the content of JSON file.
+ (NSString * _Nullable)getSessionDataJsonWithJsonFileName:(NSString * _Nonnull)jsonFileName SWIFT_WARN_UNUSED_RESULT;
/// This func can be used to convert the contents of a dictionary into a JSON string
/// \param dictionary holding key/value pairs.
///
///
/// returns:
/// String, holding the JSON.
+ (NSString * _Nullable)convertObjectToJSONWithObject:(id _Nonnull)object SWIFT_WARN_UNUSED_RESULT;
/// This func can be used to convert json string into a JSON object
/// \param json holding json content.
///
///
/// returns:
/// Any, holding the JSON object.
+ (id _Nonnull)convertJsonToObjectWithJson:(NSString * _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

enum SessionEventType : NSInteger;

SWIFT_CLASS("_TtC8LjIndoor12SessionEvent")
@interface SessionEvent : NSObject
@property (nonatomic) enum SessionEventType sessionEventType;
@property (nonatomic) enum SessionScreenType currentScreen_className;
@property (nonatomic) enum SessionScreenType targetScreen_className;
@property (nonatomic, copy) NSString * _Nonnull startTimeStamp;
@property (nonatomic, copy) NSString * _Nullable endTimeStamp;
@property (nonatomic, copy) NSString * _Nullable jsonData;
- (nonnull instancetype)initWithSessionEventType:(enum SessionEventType)eventType currentScreenInAction:(enum SessionScreenType)currentScreenInAction targetScreen:(enum SessionScreenType)targetScreen startTime:(NSDate * _Nonnull)startTime jsonData:(NSString * _Nonnull)jsonData OBJC_DESIGNATED_INITIALIZER;
/// This func can be used to convert a date object into a string object
/// \param date a Date object.
///
///
/// returns:
/// String, a String class object.
- (NSString * _Nonnull)getDateAsStringWithDate:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SessionEventType, closed) {
  SessionEventTypeMapIt = 0,
  SessionEventTypeWalkAround = 1,
  SessionEventTypeTimerTimedOut = 2,
};


SWIFT_CLASS("_TtC8LjIndoor20SessionLocationEvent")
@interface SessionLocationEvent : NSObject
@property (nonatomic) enum SessionScreenType currentScreen_className;
@property (nonatomic, copy) NSString * _Nonnull timeStamp;
@property (nonatomic) CGPoint blueDotPoint;
@property (nonatomic) double horizontalAccuracy;
@property (nonatomic) BOOL isShortestPathDownloadCalled;
@property (nonatomic, copy) NSString * _Nonnull shortestPathData;
@property (nonatomic) NSInteger floorPlanId;
@property (nonatomic, copy) NSString * _Nonnull floorName;
@property (nonatomic, copy) NSString * _Nonnull IAFloorName;
- (nonnull instancetype)initWithCurrentScreenInAction:(enum SessionScreenType)currentScreenInAction timeStamp:(NSDate * _Nonnull)timeStamp OBJC_DESIGNATED_INITIALIZER;
/// This func can be used to convert a date object into a string object
/// \param date a Date object.
///
///
/// returns:
/// String, a String class object.
- (NSString * _Nonnull)getDateAsStringWithDate:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("SessionPlayerViewController")
@interface SessionPlayerViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, SessionScreenType, closed) {
  SessionScreenTypeHomeViewController = 0,
  SessionScreenTypeBeaconViewController = 1,
  SessionScreenTypeMapViewControllerSwift = 2,
  SessionScreenTypeFindMeControllerSwift = 3,
  SessionScreenTypeFloorPlanListController = 4,
};


SWIFT_CLASS_NAMED("SwiftUtility")
@interface SwiftUtility : NSObject
+ (void)playSoundFile:(NSString * _Nullable)soundFileName format:(NSString * _Nonnull)format;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class IndoorAtlasMapOverlayView;
@class UIBezierPath;

SWIFT_CLASS_NAMED("TestMapViewController")
@interface TestMapViewController : MapViewController
@property (nonatomic, weak) IndoorAtlasMapOverlayView * _Nullable mapOverlayObj;
@property (nonatomic, weak) IAFloorPlan * _Nullable floorPlan;
@property (nonatomic, weak) UIBezierPath * _Nullable shortestPath;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable pathSegmentLengthDict;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable pathSegmentAngleDict;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSNumber *> * _Nonnull mapRotationInfo;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable pathPoints;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface TestMapViewController (SWIFT_EXTENSION(LjIndoor)) <UIScrollViewDelegate>
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
@end

@class NSAttributedString;

SWIFT_CLASS_NAMED("ToastView")
@interface ToastView : UIView
- (ToastView * _Nonnull)showToastViewOnView:(UIView * _Nonnull)view withText:(NSAttributedString * _Nonnull)text withType:(NSInteger)type SWIFT_WARN_UNUSED_RESULT;
- (void)updateToastViewWithText:(NSAttributedString * _Nonnull)text;
- (void)removeToastView;
- (void)updateConstraints;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, TurnPromptAudioSettings, closed) {
  TurnPromptAudioSettingsVibrateOnly = 1,
  TurnPromptAudioSettingsAudioOnly = 2,
  TurnPromptAudioSettingsAudioAndVibrate = 3,
};


SWIFT_CLASS_NAMED("TurnPromptAudioSettingsView")
@interface TurnPromptAudioSettingsView : UIView
- (TurnPromptAudioSettingsView * _Nullable)initViewWithFrame:(CGRect)frame defaultSettings:(enum TurnPromptAudioSettings)defaultSettings SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, UserAction, closed) {
  UserActionPressHere = 0,
  UserActionContinueTapped = 1,
  UserActionBackTapped = 2,
  UserActionNextTapped = 3,
  UserActionCrossTapped = 4,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
